" Modeline and Notes {
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker:
"
"                       .ed'''' '''$$$$be.                     
"                     -'           ^''**$$$e.                  
"                   .'                   '$$$c                 
"                  /                      '4$$b                
"                 d  3                     $$$$                
"                 $  *                   .$$$$$$               
"                .$  ^c           $$$$$e$$$$$$$$.              
"                d$L  4.         4$$$$$$$$$$$$$$b              
"                $$$$b ^ceeeee.  4$$ECL.F*$$$$$$$              
"    e$''=.      $$$$P d$$$$F $ $$$$$$$$$- $$$$$$              
"   z$$b. ^c     3$$$F '$$$$b   $'$$$$$$$  $$$$*'      .=''$c  
"  4$$$$L   \     $$P'  '$$b   .$ $$$$$...e$$        .=  e$$$. 
"  ^*$$$$$c  %..   *c    ..    $$ 3$$$$$$$$$$eF     zP  d$$$$$ 
"    '**$$$ec   '\   %ce''    $$$  $$$$$$$$$$*    .r' =$$$$P'' 
"          '*$b.  'c  *$e.    *** d$$$$$'L$$    .d'  e$$***'   
"            ^*$$c ^$c $$$      4J$$$$$% $$$ .e*'.eeP'         
"               '$$$$$$''$=e....$*$$**$cz$$' '..d$*'           
"                 '*$$$  *=%4.$ L L$ P3$$$F $$$P'              
"                    '$   '%*ebJLzb$e$$$$$b $P'                
"                      %..      4$$$$$$$$$$ '                  
"                       $$$e   z$$$$$$$$$$%                    
"                        '*$c  '$$$$$$$P'                      
"                         .'''*$$$$$$$$bc                      
"                      .-'    .$***$$$'''*e.                   
"                   .-'    .e$'     '*$c  ^*b.                 
"            .=*''''    .e$*'          '*bc  '*$e..            
"          .$'        .z*'               ^*$e.   '*****e.      
"          $$ee$c   .d'                     '*$.        3.     
"          ^*$E')$..$'                         *   .ee==d%     
"             $.d$$$*                           *  J$$$e*      
"              '''''                             '$$$'   
" 
" }

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
        endif
    " }
    "
    " Setup Bundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

" }

" Bundles {
    " Deps
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        Bundle 'dahu/vimple'
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        elseif executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column'
        endif
    " General
	    Bundle 'altercation/vim-colors-solarized'
	    Bundle 'spf13/vim-colors'
	    Bundle 'tpope/vim-surround'
	    Bundle 'kien/ctrlp.vim'
"		Bundle 'vim-scripts/sessionman.vim'
"		Bundle 'matchit.zip'
	    Bundle 'Lokaltog/powerline'
	    Bundle 'godlygeek/csapprox'
	    Bundle 'tpope/vim-unimpaired'
	    Bundle 'flazz/vim-colorschemes'
	    Bundle 'mbbill/undotree'
	    Bundle 'Raimondi/vim-buffalo'
	    Bundle 'tpope/vim-abolish.git'

    " General Programming
"	" Pick one of the checksyntax, jslint, or syntastic
	    Bundle 'scrooloose/syntastic'
	    Bundle 'tpope/vim-fugitive'
"	Bundle 'mattn/webapi-vim'
	    Bundle 'mattn/gist-vim'
	    Bundle 'scrooloose/nerdcommenter'
	    Bundle 'godlygeek/tabular'
	    if executable('ctags')
		    Bundle 'majutsushi/tagbar'
	    endif

    " Snippets & AutoComplete
	    Bundle 'garbas/vim-snipmate'
	    Bundle 'honza/snipmate-snippets'
	    " Source support_function.vim to support snipmate-snippets.
	    if filereadable(expand("~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim"))
		    source ~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim
	    endif
	    Bundle 'Shougo/neocomplcache'
	    Bundle 'Shougo/neosnippet'
	    Bundle 'honza/snipmate-snippets'

"    " PHP
"		Bundle 'spf13/PIV'
"
"    " Python
"		" Pick either python-mode or pyflakes & pydoc
"		Bundle 'klen/python-mode'
"		"Bundle 'python.vim' - destroys unimparied mappings
"		Bundle 'python_match.vim'
"		Bundle 'pythoncomplete'
"
"    " Javascript
"		Bundle 'leshill/vim-json'
"		Bundle 'groenewege/vim-less'
"		Bundle 'pangloss/vim-javascript'
"		Bundle 'briancollins/vim-jst'
"		Bundle 'kchmck/vim-coffee-script'
"
"    " Java
"		Bundle 'derekwyatt/vim-scala'
"		Bundle 'derekwyatt/vim-sbt'
"
"    " HTML
"		Bundle 'amirh/HTML-AutoCloseTag'
"		Bundle 'hail2u/vim-css3-syntax'
"
"    " Ruby
"		Bundle 'tpope/vim-rails'
"		let g:rubycomplete_buffer_loading = 1
"		"let g:rubycomplete_classes_in_global = 1
"		"let g:rubycomplete_rails = 1
"
"    " Misc
"		Bundle 'tpope/vim-markdown'
"		Bundle 'spf13/vim-preview'
"		Bundle 'tpope/vim-cucumber'
"		Bundle 'quentindecock/vim-cucumber-align-pipes'
"		Bundle 'Puppet-Syntax-Highlighting'
"
"    " Twig
"		Bundle 'beyondwords/vim-twig'
" }

" General {
    " set autowrite                  " automatically write a file when leaving a modified buffer
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }
